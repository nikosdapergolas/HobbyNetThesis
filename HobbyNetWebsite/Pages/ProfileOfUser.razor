@page "/profileOfUser/{username}"
@inject IPostsService _postsService
@inject IUserService _userSerice
@inject IFollowersService _followersService
@inject IConfiguration _config
@inject NavigationManager navManager
@inject HttpClient _http
@attribute [Authorize]

<section class="h-100 gradient-custom-2">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-lg-9 col-xl-7">
                <div class="card">
                    <div class="rounded-top text-white d-flex flex-row position-relative" style="background-color: #000; height:200px;">
                        <div class="ms-4 mt-5 d-flex flex-column position-relative" style="width: 150px;">

                            <div class="ratio ratio-1x1">
                                <img src="@user.profileImage" 
                                     alt="Generic placeholder image" 
                                     class="img-fluid img-thumbnail">
                            </div>

                            <!-- Change Profile Picture-->

                            @*<button type="button" class="btn btn-outline-dark"
                                    data-bs-toggle="modal"
                                    data-bs-target="#pictureModal"
                                    data-mdb-ripple-color="dark"
                                    style="z-index: 1;">
                                Change Picture
                            </button>

                            <!-- Edit Profile Button -->

                            <button type="button" class="btn btn-outline-dark"
                                    data-bs-toggle="modal"
                                    data-bs-target="#postModal"
                                    data-mdb-ripple-color="dark"
                                    style="z-index: 1;">
                                Edit profile
                            </button>*@
                        </div>
                        <div class="ms-3" style="margin-top: 130px;">
                            <h5>@user.firstname @user.lastname</h5>
                            <p>Hobbyist</p>
                        </div>
                    </div>
                    <div class="p-4 text-black" style="background-color: #f8f9fa;">
                        <div class="d-flex justify-content-end text-center py-1">
                            <div class="px-3">
                                <p class="mb-1 h5">@numberOfPosts</p>
                                <p class="small text-muted mb-0">Posts</p>
                            </div>
                            <div class="px-3">
                                <p class="mb-1 h5">@user.Hobbies.Count</p>
                                <p class="small text-muted mb-0"> Hobbies</p>
                            </div>
                            <div class="px-3">
                                <p class="mb-1 h5">@followers.Count()</p>
                                <p class="small text-muted mb-0">Followers</p>
                            </div>
                            <div class="px-3">
                                <p class="mb-1 h5">@following.Count()</p>
                                <p class="small text-muted mb-0">Following</p>
                            </div>
                        </div>
                    </div>

                    <br />
                    <br />

                    <div class="card-body p-4 text-black">
                        <div class="mb-5">
                            <p class="lead fw-normal mb-1">About</p>
                            <div class="p-4" style="background-color: #f8f9fa;">
                                <p class="font-italic mb-1"><b>Username:</b> @user.username</p>
                                <p class="font-italic mb-1"><b>First name:</b> @user.firstname</p>
                                <p class="font-italic mb-0"><b>Last name:</b> @user.lastname</p>
                                <p class="font-italic mb-0"><b>E-mail:</b> @user.email</p>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <p class="lead fw-normal mb-0">Recent posts from this user.</p>
                            @*<p class="mb-0"><a href="#!" class="text-muted">Show all</a></p>*@
                        </div>
                        <br />
                        <br />

                        <div class="card-deck" id="postCardDeck">
                            @foreach (var post in posts)
                            {
                                <div class="card mb-4 rounded-pill">
                                    <div class="card-header bg-primary text-white d-flex align-items-center justify-content-between rounded-pill">
                                        <div class="d-flex align-items-center">
                                            <div class="rounded-circle profile-picture">
                                                <!-- Profile Picture Image -->
                                                <img src="@user.profileImage" 
                                                     alt="Profile Picture"
                                                     style="width: 100%;
                                                            height: 100%;
                                                            object-fit: cover;
                                                            width: 40px;
                                                            height: 40px;
                                                            overflow: hidden;" />
                                            </div>
                                            <div class="ms-3">
                                                <h5 class="card-title">@post.Username</h5>
                                                <small class="text-white">@post.HobbyName</small>
                                                <br />
                                                <small class="text-white">@post.timestamp.ToString("MMMM dd, yyyy")</small>
                                            </div>
                                        </div>
                                        <div class="nav-item dropdown">
                                            <!-- Post Options Button (e.g., Like, Comment, Share) -->
                                            <button type="button" class="btn btn-link text-white" data-bs-toggle="dropdown" id="dropdownToggle">
                                                <i class="fas fa-ellipsis-h"></i>
                                            </button>


                                            <div class="dropdown-menu" aria-labelledby="dropdownToggle">
                                                <a class="dropdown-item" href="#">Message user</a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="#">Report Post</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text fs-5 lh-lg">@post.body</p>
                                    </div>
                                    <div class="card-footer bg-secondary rounded-pill">
                                        <!-- Like, Comment, Share Buttons -->
                                        @*<button type="button" class="btn btn-primary rounded-pill">
                                            <i class="far fa-thumbs-up"></i> Like
                                        </button>*@
                                        <LikeButton OnLike="() => LikeAPost(post.Id)" LikeCount="@post.postLikes.Count" />
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        @*<button type="button" class="btn btn-success rounded-pill" data-bs-toggle="modal" data-bs-target="#CommentsModal" @onclick="() => fillListWithComments(post.comments, post.Id)">
                                            <i class="far fa-comment-alt"></i> Comments | @post.comments?.Count
                                        </button>
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        <button type="button" class="btn btn-dark rounded-pill">
                                            <i class="fas fa-share"></i> Share
                                        </button>*@
                                    </div>
                                </div>
                            }

                            @if (posts.Count.Equals(0))
                            {
                                <div class="container d-flex justify-content-center align-items-center vh-10">
                                    <div class="text-center">
                                        <h1>No posts were found from this user</h1>
                                    </div>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!--Modal for Comments on a Post-->
<div class="modal fade" id="CommentsModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="CommentsModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="postModalLabel">Comments of this post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <br />
                @foreach (var comment in listOfComments)
                {
                    <h5> User: @comment.user.username</h5>
                    <h3><b>@comment.body</b></h3>
                    <hr />
                }
                <EditForm Model="commentDTO">
                    <InputTextArea @bind-Value="commentDTO.body"
                                   id="postBody"
                                   placeholder="Write a comment for this post."
                                   class="form-control"
                                   rows="8"
                                   style="resize: none;"
                                   MaxLength="250" />
                </EditForm>

                <br>
                <button class="btn btn-primary rounded-pill" @onclick="@CommentOnPost">
                    Send Comment
                </button>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string username { get; set; } = string.Empty;

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    User loggedInUser = new();
    CommentDTO commentDTO = new();
    List<Comment> listOfComments = new();
    LikePostDTO likePostDTO = new();
    User user = new();
    List<Post> posts = new();
    IEnumerable<string> followers = new List<string>();
    IEnumerable<string> following = new List<string>();
    private int numberOfPosts = 0;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;

        user = await _userSerice.GetOneUserByUsername(username);
        loggedInUser = await _userSerice.GetOneUserByUsername(authState.User.FindFirst(ClaimTypes.GivenName).Value);

        likePostDTO = new();

        try
        {
            // To see who follows this user
            followers = await _followersService.GetFollowersOfOnePerson(username);

            // To see how many people this person follows
            following = await _followersService.GetAllPeopleOneUserFollows(username);

            posts = await _postsService.GetPostsFromOneUser(username);
            numberOfPosts = posts.Count();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task LikeAPost(int postId)
    {
        likePostDTO = new();
        likePostDTO.postId = postId;
        likePostDTO.userId = user.Id;
        var result = await _postsService.LikePost(likePostDTO);

        navManager.NavigateTo(navManager.Uri, forceLoad: true);
    }

    private async Task fillListWithComments(List<Comment> comments, int postId)
    {
        commentDTO.postId = postId;
        listOfComments = new();
        foreach (var comment in comments)
        {
            listOfComments.Add(comment);
        }
    }

    private async Task CommentOnPost()
    {
        commentDTO.username = loggedInUser.username;
        var result = await _postsService.CommentPost(commentDTO);

        navManager.NavigateTo(navManager.Uri, forceLoad: true);
    }
}
