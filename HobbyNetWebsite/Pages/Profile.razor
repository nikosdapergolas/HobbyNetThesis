@page "/profile"
@inject IPostsService _postsService
@inject IUserService _userSerice
@inject IFollowersService _followersService
@inject IConfiguration _config
@inject NavigationManager navManager
@attribute [Authorize]

<section class="h-100 gradient-custom-2">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-lg-9 col-xl-7">
                <div class="card">
                    <div class="rounded-top text-white d-flex flex-row" style="background-color: #000; height:200px;">
                        <div class="ms-4 mt-5 d-flex flex-column" style="width: 150px;">
                            <img src="@user.profileImage"
                                 alt="Generic placeholder image" class="img-fluid img-thumbnail mt-4 mb-2"
                                 style="width: 150px; height:200px; z-index: 1;">
                            <button type="button" class="btn btn-outline-dark" data-mdb-ripple-color="dark"
                                    style="z-index: 1;">
                                Edit profile
                            </button>
                        </div>
                        <div class="ms-3" style="margin-top: 130px;">
                            <h5>@user.firstname @user.lastname</h5>
                            <p>Hobbyist</p>
                        </div>
                    </div>
                    <div class="p-4 text-black" style="background-color: #f8f9fa;">
                        <div class="d-flex justify-content-end text-center py-1">
                            <div>
                                <p class="mb-1 h5">@numberOfPosts</p>
                                <p class="small text-muted mb-0">Posts</p>
                            </div>
                            <div class="px-3">
                                <p class="mb-1 h5">@followers.Count()</p>
                                <p class="small text-muted mb-0">Followers</p>
                            </div>
                            <div>
                                <p class="mb-1 h5">@following.Count()</p>
                                <p class="small text-muted mb-0">Following</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-4 text-black">
                        <div class="mb-5">
                            <p class="lead fw-normal mb-1">About</p>
                            <div class="p-4" style="background-color: #f8f9fa;">
                                <p class="font-italic mb-1"><b>Username:</b> @user.username</p>
                                <p class="font-italic mb-1"><b>First name:</b> @user.firstname</p>
                                <p class="font-italic mb-0"><b>Last name:</b> @user.lastname</p>
                                <p class="font-italic mb-0"><b>E-mail:</b> @user.email</p>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <p class="lead fw-normal mb-0">Recent posts from this user.</p>
                            @*<p class="mb-0"><a href="#!" class="text-muted">Show all</a></p>*@
                        </div>
                        <br />
                        <br />

                        <div class="card-deck" id="postCardDeck">
                            @foreach (var post in posts)
                            {
                                <div class="card mb-4 rounded-pill">
                                    <div class="card-header bg-primary text-white d-flex align-items-center justify-content-between rounded-pill">
                                        <div class="d-flex align-items-center">
                                            <div class="rounded-circle profile-picture">
                                                <!-- Profile Picture Image -->
                                                <img src="@user.profileImage" alt="Profile Picture" />
                                            </div>
                                            <div class="ms-3">
                                                <h5 class="card-title">@post.Username</h5>
                                                <small class="text-white">@post.HobbyName</small>
                                                <br />
                                                <small class="text-white">@post.timestamp.ToString("MMMM dd, yyyy")</small>
                                            </div>
                                        </div>
                                        <li class="nav-item dropdown">
                                            <!-- Post Options Button (e.g., Like, Comment, Share) -->
                                            <button type="button" class="btn btn-link text-white" data-bs-toggle="dropdown" id="dropdownToggle">
                                                <i class="fas fa-ellipsis-h"></i>
                                            </button>

                                            <div class="dropdown-menu" aria-labelledby="dropdownToggle">
                                                <a class="dropdown-item" href="#">Action</a>
                                                <a class="dropdown-item" href="#">Another action</a>
                                                <a class="dropdown-item" href="#">Something else here</a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="#">Separated link</a>
                                            </div>
                                        </li>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text fs-5 lh-lg">@post.body</p>
                                    </div>
                                    <div class="card-footer bg-secondary rounded-pill">
                                        <!-- Like, Comment, Share Buttons -->
                                        <button type="button" class="btn btn-primary rounded-pill">
                                            <i class="far fa-thumbs-up"></i> Like
                                        </button>
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        <button type="button" class="btn btn-success rounded-pill">
                                            <i class="far fa-comment-alt"></i> Comment
                                        </button>
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        &nbsp;
                                        <button type="button" class="btn btn-dark rounded-pill">
                                            <i class="fas fa-share"></i> Share
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    User user = new();
    List<Post> posts = new();
    IEnumerable<string> followers = new List<string>();
    IEnumerable<string> following = new List<string>();
    string image = string.Empty;

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    private int numberOfPosts = 0;
    private string userName = string.Empty;
    private string name = string.Empty;
    private string postBody { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;

        //image = _config.GetValue<string>("api") + "/images/default.jpg";

        userName = authState.User.FindFirst(ClaimTypes.GivenName).Value;
        //name = authState.User.FindFirst(ClaimTypes.Name).Value;
        //image = authState.User.FindFirst(ClaimTypes.Uri).Value;

        user = await _userSerice.GetOneUserByUsername(userName);


        try
        {
            //image = _config.GetValue<string>("api") + user.profileImage;

            // To see who follows this user
            followers = await _followersService.GetFollowersOfOnePerson(userName);

            // To see how many people this person follows
            following = await _followersService.GetAllPeopleOneUserFollows(userName);

            posts = await _postsService.GetPostsFromOneUser(userName);
            numberOfPosts = posts.Count();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
