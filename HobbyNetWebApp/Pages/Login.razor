@page "/login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

<h3>Login</h3>

@if (showAuthenticationError == true)
{
    <div class="alert alert-danger" role="alert">
        <p>@authenticationErrorText</p>
    </div>
}

<EditForm Model="model" OnValidSubmit="ExecuteLogin" class="card card-body bg-light mt-5" >
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group row">
        <label for="username" class="col-md-2 col-form-label">Username:</label>
        <div class="col-md-10">
            <InputText id="username" class="form-controll" @bind-Value="model.Username" />
            <ValidationMessage For="@(() => model.Username)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">Password:</label>
        <div class="col-md-10">
            <InputText type="password" id="password" class="form-controll" @bind-Value="model.Password" />
            <ValidationMessage For="@(() => model.Password)" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <button type="submit" class="btn btn-success">Login</button>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <NavLink class="nav-link" href="register">Register</NavLink>
        </div>
    </div>
    
</EditForm>

@if (showAuthenticationError)
{
    <div class="text-danger">
        @authenticationErrorText
    </div>
}

@code {
    private AuthenticationUserModel model = new();

    private bool showAuthenticationError = false;
    private string authenticationErrorText = "";

    private async Task ExecuteLogin()
    {
        showAuthenticationError = false;

        string result = await AuthService.Login(model);

        if (result is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authenticationErrorText = "There was an Error when trying to login!";
            showAuthenticationError = true;
        }
    }
}
